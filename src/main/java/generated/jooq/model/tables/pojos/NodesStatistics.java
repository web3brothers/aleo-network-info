/*
 * This file is generated by jOOQ.
 */
package generated.jooq.model.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NodesStatistics implements Serializable {

    private static final long serialVersionUID = 1L;

    private String         ip;
    private OffsetDateTime infoCollectedOn;
    private Boolean        miner;
    private Boolean        syncing;
    private OffsetDateTime launched;
    private String         version;
    private Boolean        notReachable;
    private Double         blockCount;
    private String         nodeType;

    public NodesStatistics() {}

    public NodesStatistics(NodesStatistics value) {
        this.ip = value.ip;
        this.infoCollectedOn = value.infoCollectedOn;
        this.miner = value.miner;
        this.syncing = value.syncing;
        this.launched = value.launched;
        this.version = value.version;
        this.notReachable = value.notReachable;
        this.blockCount = value.blockCount;
        this.nodeType = value.nodeType;
    }

    public NodesStatistics(
        String         ip,
        OffsetDateTime infoCollectedOn,
        Boolean        miner,
        Boolean        syncing,
        OffsetDateTime launched,
        String         version,
        Boolean        notReachable,
        Double         blockCount,
        String         nodeType
    ) {
        this.ip = ip;
        this.infoCollectedOn = infoCollectedOn;
        this.miner = miner;
        this.syncing = syncing;
        this.launched = launched;
        this.version = version;
        this.notReachable = notReachable;
        this.blockCount = blockCount;
        this.nodeType = nodeType;
    }

    /**
     * Getter for <code>public.nodes_statistics.ip</code>.
     */
    public String getIp() {
        return this.ip;
    }

    /**
     * Setter for <code>public.nodes_statistics.ip</code>.
     */
    public NodesStatistics setIp(String ip) {
        this.ip = ip;
        return this;
    }

    /**
     * Getter for <code>public.nodes_statistics.info_collected_on</code>.
     */
    public OffsetDateTime getInfoCollectedOn() {
        return this.infoCollectedOn;
    }

    /**
     * Setter for <code>public.nodes_statistics.info_collected_on</code>.
     */
    public NodesStatistics setInfoCollectedOn(OffsetDateTime infoCollectedOn) {
        this.infoCollectedOn = infoCollectedOn;
        return this;
    }

    /**
     * Getter for <code>public.nodes_statistics.miner</code>.
     */
    public Boolean getMiner() {
        return this.miner;
    }

    /**
     * Setter for <code>public.nodes_statistics.miner</code>.
     */
    public NodesStatistics setMiner(Boolean miner) {
        this.miner = miner;
        return this;
    }

    /**
     * Getter for <code>public.nodes_statistics.syncing</code>.
     */
    public Boolean getSyncing() {
        return this.syncing;
    }

    /**
     * Setter for <code>public.nodes_statistics.syncing</code>.
     */
    public NodesStatistics setSyncing(Boolean syncing) {
        this.syncing = syncing;
        return this;
    }

    /**
     * Getter for <code>public.nodes_statistics.launched</code>.
     */
    public OffsetDateTime getLaunched() {
        return this.launched;
    }

    /**
     * Setter for <code>public.nodes_statistics.launched</code>.
     */
    public NodesStatistics setLaunched(OffsetDateTime launched) {
        this.launched = launched;
        return this;
    }

    /**
     * Getter for <code>public.nodes_statistics.version</code>.
     */
    public String getVersion() {
        return this.version;
    }

    /**
     * Setter for <code>public.nodes_statistics.version</code>.
     */
    public NodesStatistics setVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Getter for <code>public.nodes_statistics.not_reachable</code>.
     */
    public Boolean getNotReachable() {
        return this.notReachable;
    }

    /**
     * Setter for <code>public.nodes_statistics.not_reachable</code>.
     */
    public NodesStatistics setNotReachable(Boolean notReachable) {
        this.notReachable = notReachable;
        return this;
    }

    /**
     * Getter for <code>public.nodes_statistics.block_count</code>.
     */
    public Double getBlockCount() {
        return this.blockCount;
    }

    /**
     * Setter for <code>public.nodes_statistics.block_count</code>.
     */
    public NodesStatistics setBlockCount(Double blockCount) {
        this.blockCount = blockCount;
        return this;
    }

    /**
     * Getter for <code>public.nodes_statistics.node_type</code>.
     */
    public String getNodeType() {
        return this.nodeType;
    }

    /**
     * Setter for <code>public.nodes_statistics.node_type</code>.
     */
    public NodesStatistics setNodeType(String nodeType) {
        this.nodeType = nodeType;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NodesStatistics other = (NodesStatistics) obj;
        if (ip == null) {
            if (other.ip != null)
                return false;
        }
        else if (!ip.equals(other.ip))
            return false;
        if (infoCollectedOn == null) {
            if (other.infoCollectedOn != null)
                return false;
        }
        else if (!infoCollectedOn.equals(other.infoCollectedOn))
            return false;
        if (miner == null) {
            if (other.miner != null)
                return false;
        }
        else if (!miner.equals(other.miner))
            return false;
        if (syncing == null) {
            if (other.syncing != null)
                return false;
        }
        else if (!syncing.equals(other.syncing))
            return false;
        if (launched == null) {
            if (other.launched != null)
                return false;
        }
        else if (!launched.equals(other.launched))
            return false;
        if (version == null) {
            if (other.version != null)
                return false;
        }
        else if (!version.equals(other.version))
            return false;
        if (notReachable == null) {
            if (other.notReachable != null)
                return false;
        }
        else if (!notReachable.equals(other.notReachable))
            return false;
        if (blockCount == null) {
            if (other.blockCount != null)
                return false;
        }
        else if (!blockCount.equals(other.blockCount))
            return false;
        if (nodeType == null) {
            if (other.nodeType != null)
                return false;
        }
        else if (!nodeType.equals(other.nodeType))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.ip == null) ? 0 : this.ip.hashCode());
        result = prime * result + ((this.infoCollectedOn == null) ? 0 : this.infoCollectedOn.hashCode());
        result = prime * result + ((this.miner == null) ? 0 : this.miner.hashCode());
        result = prime * result + ((this.syncing == null) ? 0 : this.syncing.hashCode());
        result = prime * result + ((this.launched == null) ? 0 : this.launched.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        result = prime * result + ((this.notReachable == null) ? 0 : this.notReachable.hashCode());
        result = prime * result + ((this.blockCount == null) ? 0 : this.blockCount.hashCode());
        result = prime * result + ((this.nodeType == null) ? 0 : this.nodeType.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NodesStatistics (");

        sb.append(ip);
        sb.append(", ").append(infoCollectedOn);
        sb.append(", ").append(miner);
        sb.append(", ").append(syncing);
        sb.append(", ").append(launched);
        sb.append(", ").append(version);
        sb.append(", ").append(notReachable);
        sb.append(", ").append(blockCount);
        sb.append(", ").append(nodeType);

        sb.append(")");
        return sb.toString();
    }
}
